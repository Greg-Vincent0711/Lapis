AWSTemplateFormatVersion: '2010-09-09'
Description: Lapis' Cloudformation Template

Resources:
  LapisCodeAndImages:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "lapis-memory-${AWS::AccountId}"
      AccessControl: Private

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: CloudFormationFullAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  LapisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LapisData
      AttributeDefinitions:
        - AttributeName: Author_ID
          AttributeType: S
        - AttributeName: Location
          AttributeType: S
      KeySchema:
        - AttributeName: Author_ID
          KeyType: HASH
        - AttributeName: Location
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  LapisLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LapisLambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies:
        - PolicyName: LapisPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt LapisTable.Arn
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${LapisCodeAndImages}/*"

  LapisFernetKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: LapisAppSecret
      Description: "Fernet key for Lapis' CSE"

Outputs:
  S3BucketName:
    Description: "Bucket for imgs users send to Lapis."
    Value: !Ref LapisCodeAndImages

  DynamoDBTableName:
    Description: "Location data."
    Value: !Ref LapisTable
  
  SecretARN:
    Description: "ARN of Lapis' stored fernet key."
    Value: !Ref LapisFernetKey
